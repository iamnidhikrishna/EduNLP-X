version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: edunlpx_postgres
    environment:
      POSTGRES_DB: edunlpx_db
      POSTGRES_USER: edunlpx_user
      POSTGRES_PASSWORD: edunlpx_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - edunlpx_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: edunlpx_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - edunlpx_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # ChromaDB Vector Database
  chromadb:
    image: chromadb/chroma:latest
    container_name: edunlpx_chromadb
    ports:
      - "8000:8000"
    volumes:
      - chromadb_data:/chroma/chroma
    networks:
      - edunlpx_network
    restart: unless-stopped

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: edunlpx_backend
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=edunlpx_user
      - POSTGRES_PASSWORD=edunlpx_password
      - POSTGRES_DB=edunlpx_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CHROMA_HOST=chromadb
      - CHROMA_PORT=8000
      - OLLAMA_BASE_URL=http://host.docker.internal:11434
    ports:
      - "8001:8000"
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
      - chromadb
    networks:
      - edunlpx_network
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: edunlpx_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8001
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - edunlpx_network
    restart: unless-stopped

  # Streamlit App (MVP)
  streamlit:
    build:
      context: ./streamlit_app
      dockerfile: Dockerfile
    container_name: edunlpx_streamlit
    environment:
      - API_URL=http://backend:8000
    ports:
      - "8501:8501"
    volumes:
      - ./streamlit_app:/app
    depends_on:
      - backend
    networks:
      - edunlpx_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  chromadb_data:

networks:
  edunlpx_network:
    driver: bridge
